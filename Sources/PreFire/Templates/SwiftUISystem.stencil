// swiftlint:disable all
// swiftformat:disable all

import SwiftUI
import PreFire

@testable import {{ argument.mainTarget }}

public enum PreviewModels {
    public static var models: [PreviewModel] = {
        var views: [PreviewModel] = []

        {% for type in types.types where type.implements.UISystemProvider or type|annotated:"UISystemProvider" %}
        for state in {{ type.name }}.State.allCases {
            views.append(
                PreviewModel(
                    content: {
                        WrapperView(
                            content: { AnyView({{ type.name }}.previews) },
                            closure: { {{ type.name }}.state = state }
                        )
                    },
                    name: String(String(describing: {{ type.name }}.self).split(separator: "_").first!),
                    type: {{ type.name }}._allPreviews.first?.layout == .sizeThatFits ? .component : .screen,
                    device: {{ type.name }}._allPreviews.first?.device,
                    state: String(String(reflecting: state).split(separator: ".").last!)
                )
            )
        }
        {% endfor %}

        return views.sorted(by: { $0.name > $1.name || $0.story ?? "" > $1.story ?? "" })
    }()
}

extension PreviewLayout: Equatable {
    public static func == (lhs: PreviewLayout, rhs: PreviewLayout) -> Bool {
        switch lhs {
        case .sizeThatFits:
            if case .sizeThatFits = rhs { return true }
        case .device:
            if case .device = rhs { return true }
        default: return false
        }
        return false
    }
}
