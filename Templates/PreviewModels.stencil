// swiftlint:disable all
// swiftformat:disable all

import SwiftUI
import Prefire

{% if argument.mainTarget %}
@testable import {{ argument.mainTarget }}
{% endif %}

public enum PreviewModels {
    public static var models: [PreviewModel] = {
        var views: [PreviewModel] = []

        {% for type in types.types where type.implements.PrefireProvider or type.based.PrefireProvider or type|annotated:"PrefireProvider" %}
        views.append(contentsOf: createModel(for: {{ type.name }}.self, name: "{{ type.name | replace:"_Previews","" | replace:"_Preview","" }}"))
        {% endfor %}

        return views.sorted(by: { $0.name > $1.name || $0.story ?? "" > $1.story ?? "" })
    }()

    @inlinable
    static func createModel<Preview: PreviewProvider>(for preview: Preview.Type, name: String) -> [PreviewModel] {
        var views: [PreviewModel] = []

        for (index, view) in Preview._allPreviews.enumerated() {
            views.append(
                PreviewModel(
                    id: name + "\(index)" + String(describing: self),
                    content: { return view.content },
                    name: name,
                    type: view.layout == .device ? .screen : .component,
                    device: view.device
                )
            )
        }

        return views
    }
}
